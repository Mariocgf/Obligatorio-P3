@model IEnumerable<MVC.Models.Envio.EnvioListadoViewModel>

@{
    ViewData["Title"] = "Buscar";
}

<h1>Buscar</h1>

<hr />

<!-- Nav tabs -->
<ul class="nav nav-tabs mb-3" id="busquedaTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="fecha-tab" data-bs-toggle="tab" data-bs-target="#fecha" type="button" role="tab" aria-controls="fecha" aria-selected="true">
            Buscar por Fecha y Estado
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="comentario-tab" data-bs-toggle="tab" data-bs-target="#comentario" type="button" role="tab" aria-controls="comentario" aria-selected="false">
            Buscar por Comentario
        </button>
    </li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <!-- Primer formulario: Fecha y Estado -->
    <div class="tab-pane fade show active" id="fecha" role="tabpanel" aria-labelledby="fecha-tab">
        <form asp-action="BuscarXFecha">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row mb-3">
                <div class="col">
                    <input type="date" class="form-control" name="FechaDesde" placeholder="Fecha desde" aria-label="Fecha desde">
                </div>
                <div class="col">
                    <input type="date" class="form-control" name="FechaHasta" placeholder="Fecha hasta" aria-label="Fecha hasta" max="@DateTime.Now.ToString("yyyy-MM-dd")">
                </div>
            </div>

            <fieldset class="row mb-3">
                <legend class="col-1 pt-0">Estado:</legend>
                <div class="col-1">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Estado" id="gridRadios1" value="-1" checked>
                        <label class="form-check-label" for="gridRadios1">Todos</label>
                    </div>
                </div>
                <div class="col-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Estado" id="gridRadios2" value="0">
                        <label class="form-check-label" for="gridRadios2">En proceso</label>
                    </div>
                </div>
                <div class="col-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Estado" id="gridRadios3" value="1">
                        <label class="form-check-label" for="gridRadios3">Finalizado</label>
                    </div>
                </div>
            </fieldset>

            <div class="form-group">
                <input type="submit" value="Buscar" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <!-- Segundo formulario: Comentario -->
    <div class="tab-pane fade" id="comentario" role="tabpanel" aria-labelledby="comentario-tab">
        <form asp-action="BuscarXComentario">
            <div class="row mb-3">
                <div class="col">
                    <input type="text" class="form-control" name="Comentario" placeholder="Comentario" aria-label="Comentario">
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Buscar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@if (!String.IsNullOrEmpty(ViewBag.Msg))
{
    <div class="alert alert-danger mt-3" role="alert">
        @ViewBag.Msg
    </div>
}
<hr />

@if (Model.Count() != 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.NroTracking)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Fecha)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Comentario)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Peso)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TipoEnvio)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NroTracking)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Fecha)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comentario)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Peso)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estado)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoEnvio)
                    </td>
                    <td>
                        @Html.ActionLink("Seguimientos", "Seguimientos", new { idEnvio = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h3>No tienes envios.</h3>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
